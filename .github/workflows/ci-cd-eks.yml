name: Build, Push Images and Deploy to EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: 590183739327.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  BACKEND_REPO: backend
  FRONTEND_REPO: frontend
  K8S_NAMESPACE: hike
  # You can set the cluster name here or via secrets
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

jobs:
  build-and-push:
    name: Build & Push images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push backend image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building backend image..."
          docker build -t backend:latest ./backend
          docker tag backend:latest $ECR_REGISTRY/${{ env.BACKEND_REPO }}:latest
          docker tag backend:latest $ECR_REGISTRY/${{ env.BACKEND_REPO }}:${IMAGE_TAG}
          docker push $ECR_REGISTRY/${{ env.BACKEND_REPO }}:latest
          docker push $ECR_REGISTRY/${{ env.BACKEND_REPO }}:${IMAGE_TAG}

      - name: Build & push frontend image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building frontend image..."
          docker build -t frontend:latest ./frontend
          docker tag frontend:latest $ECR_REGISTRY/${{ env.FRONTEND_REPO }}:latest
          docker tag frontend:latest $ECR_REGISTRY/${{ env.FRONTEND_REPO }}:${IMAGE_TAG}
          docker push $ECR_REGISTRY/${{ env.FRONTEND_REPO }}:latest
          docker push $ECR_REGISTRY/${{ env.FRONTEND_REPO }}:${IMAGE_TAG}

  deploy-to-eks:
    name: Deploy to EKS (namespace: hike)
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repo (for k8s manifests/helm charts)
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update kubeconfig for EKS cluster
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}
          kubectl config current-context

      - name: Set backend image to new tag
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Ensure deployments exist and names/container names match
          kubectl -n $K8S_NAMESPACE set image deployment/backend backend=$ECR_REGISTRY/${{ env.BACKEND_REPO }}:${IMAGE_TAG} --record
          kubectl -n $K8S_NAMESPACE rollout status deployment/backend --timeout=120s

      - name: Set frontend image to new tag
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          kubectl -n $K8S_NAMESPACE set image deployment/frontend frontend=$ECR_REGISTRY/${{ env.FRONTEND_REPO }}:${IMAGE_TAG} --record
          kubectl -n $K8S_NAMESPACE rollout status deployment/frontend --timeout=120s

      - name: Verify services
        run: |
          kubectl -n $K8S_NAMESPACE get pods
          kubectl -n $K8S_NAMESPACE get svc